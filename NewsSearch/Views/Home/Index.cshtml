@using NewsSearch.Core
@model NewsSearch.Models.SearchViewModel

@*@{ ViewBag.Title = ".Search"; }*@

<div class="container-fluid" data-spy="affix" data-offset-top="66">
    <div class="container-search">
        <div class="row">
            <div class="col-sm-offset-2 col-sm-8">
                <div class="container-fluid">
                    @using (Html.BeginForm("", "", FormMethod.Post, new { @class = "form-inline", role = "form" }))
                    {
                        <div class="row">
                            <div class="col-xs-10">
                                @Html.TextBoxFor(m => Model.SearchQuery, new { @class = "form-control" })
                            </div>
                            <div class="col-xs-2">
                                <button type="submit" class="btn">Search</button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@if (Model.SearchResults != null)
{
    var displayed = new List<ISearch>();

    <div class="container-fluid">
        @{
            var wiki = Model.SearchResults.First(x => x.SourceName.Equals("wikipedia", StringComparison.InvariantCultureIgnoreCase));
            displayed.Add(wiki);
            if (wiki != null && wiki.Results != null)
            {
                var wikires = wiki.Results.First();
                <div class="results-news container-fluid">
                    <h3>@wiki.SourceName</h3>
                    <h4><a class="text-primary" href="@wikires.WebUrl" target="_blank">@wikires.Title</a></h4>
                    <span>@Html.Raw(@wikires.Extract)</span>
                    <h6><small class="text-info">@wikires.PublicationDate.ToShortDateString()</small></h6>
                </div>
            }
        }
    </div>

    const int cols = 3;

    while (displayed.Count < Model.SearchResults.Count)
    {
        var c = 0;
        <div class="container-fluid">
            <div class="row">
                @foreach (var source in Model.SearchResults.Except(displayed))
                {
                    c++;
                    displayed.Add(source);
                    <div class="col-sm-4">
                        <div class="table-responsive">
                            <div class="container">
                                <h3>@source.SourceName</h3>
                            </div>
                            @if (source.Error == null)
                            {
                                if (source.Results != null)
                                {
                                    <table class="table results-news">
                                        <tbody>
                                            @foreach (var news in source.Results.OrderByDescending(x => x.PublicationDate))
                                            {
                                                <tr>
                                                    <td><small>@news.PublicationDate.ToShortDateString()</small></td>
                                                    <td>
                                                        <a class="text-info" href="@news.WebUrl" target="_blank">@news.Title</a>
                                                        @if (!string.IsNullOrEmpty(news.SubSourceName))
                                                        {
                                                            <div class="newsSubSource">
                                                                @{
                                                            var subSource = !string.IsNullOrEmpty(news.SubSourceDomain) ? news.SubSourceDomain : news.SubSourceName;
                                                            if (!subSource.ToLower().Contains("http"))
                                                            {
                                                                subSource = "http://" + subSource;
                                                            }
                                                                }
                                                                <a href="@subSource" target="_blank">@news.SubSourceName</a>
                                                            </div>
                                                        }
                                                    </td>

                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                }
                            }
                            else
                            {
                                <div class="alert alert-danger">@source.Error.Message</div>
                            }
                            @if (c == cols)
                            {
                                break;
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    }
}
@section scripts
{
    @Scripts.Render("~/bundles/searchnews")
    <script type="text/javascript">
        $(function () {
            SN.SearchNews.init();
        });
    </script>
}
